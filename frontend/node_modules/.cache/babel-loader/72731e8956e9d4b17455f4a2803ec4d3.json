{"ast":null,"code":"var _jsxFileName = \"/home/nahuel/Escritorio/nahuel tp/frontend/src/componentes/EntityList.js\";\nimport React from 'react';\nimport BorrarFarmacia from \"./componentes/BorrarFarmacia\";\nconst API_HOST = process.env.REACT_APP_API_HOST || 'localhost';\nconst API_PORT = process.env.REACT_APP_API_PORT || 8888;\nconst API_URL = \"//\".concat(API_HOST, \":\").concat(API_PORT);\n\nclass EntityList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entities: [],\n      selected: {}\n    };\n  }\n\n  componentWillMount() {\n    fetch(\"\".concat(API_URL, \"/\").concat(this.props.entity)).then(res => res.json()).then(entities => this.setState({\n      entities: entities\n    }));\n  }\n\n  render() {\n    if (this.state.entities.length > 0) {\n      //uso el primero para conocer los atributos\n      var columns = Object.entries(this.state.entities[0]).map(entry => entry[0]);\n      return React.createElement(\"div\", {\n        className: \"EntityList\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"nombre\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, this.renderRows(columns))), React.createElement(BorrarFarmacia, {\n        farmacia: this.state.selected,\n        farmaciaChange: this.farmaciaChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \" Cargando \", this.props.entity, \" \");\n    }\n  }\n\n  select(unProducto) {\n    this.setState({\n      selected: unProducto\n    });\n  }\n\n  farmaciaChange(unFarmacia) {\n    var newFarmacias = this.state.productos.map(item => unFarmacia._id != item._id ? item : unFarmacia);\n    this.setState({\n      farmacias: newFarmacias,\n      selected: unFarmacia\n    });\n  }\n\n  renderHeaders(columns) {\n    return columns.map((col, index) => {\n      return React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, col);\n    });\n  }\n\n  renderRows(columns) {\n    return this.state.entities.map((object, index) => {\n      return React.createElement(\"tr\", {\n        key: object._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.renderRow(object, columns));\n    });\n  }\n\n  renderRow(object, columns) {\n    return columns.map((attName, index) => {\n      return React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, object[attName]);\n    });\n  }\n\n}\n\nexport default EntityList;","map":{"version":3,"sources":["/home/nahuel/Escritorio/nahuel tp/frontend/src/componentes/EntityList.js"],"names":["React","BorrarFarmacia","API_HOST","process","env","REACT_APP_API_HOST","API_PORT","REACT_APP_API_PORT","API_URL","EntityList","Component","constructor","props","state","entities","selected","componentWillMount","fetch","entity","then","res","json","setState","render","length","columns","Object","entries","map","entry","renderRows","farmaciaChange","select","unProducto","unFarmacia","newFarmacias","productos","item","_id","farmacias","renderHeaders","col","index","object","renderRow","attName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AAEA,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,IAAkC,WAAnD;AACA,MAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAR,CAAYG,kBAAZ,IAAkC,IAAnD;AAEA,MAAMC,OAAO,eAAQN,QAAR,cAAoBI,QAApB,CAAb;;AAEA,MAAMG,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAY;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KAAZ;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnBC,IAAAA,KAAK,WAAIT,OAAJ,cAAe,KAAKI,KAAL,CAAWM,MAA1B,EAAL,CACGC,IADH,CACSC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADhB,EAEGF,IAFH,CAESL,QAAQ,IAAI,KAAKQ,QAAL,CAAc;AAACR,MAAAA,QAAQ,EAAEA;AAAX,KAAd,CAFrB;AAGD;;AAEDS,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKV,KAAL,CAAWC,QAAX,CAAoBU,MAApB,GAA6B,CAAhC,EAAmC;AACjC;AACF,UAAIC,OAAO,GAAGC,MAAM,CAACC,OAAP,CAAe,KAAKd,KAAL,CAAWC,QAAX,CAAoB,CAApB,CAAf,EAAuCc,GAAvC,CAA2CC,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAzD,CAAd;AACA,aACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,UAAL,CAAgBL,OAAhB,CADH,CANF,CAFF,EAYE,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWE,QAArC;AAA+C,QAAA,cAAc,EAAE,KAAKgB,cAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,CADF;AAgBD,KAnBC,MAoBG;AACH,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAc,KAAKnB,KAAL,CAAWM,MAAzB,MAAR;AACD;AACA;;AACDc,EAAAA,MAAM,CAACC,UAAD,EAAa;AACjB,SAAKX,QAAL,CAAc;AAACP,MAAAA,QAAQ,EAACkB;AAAV,KAAd;AACD;;AACDF,EAAAA,cAAc,CAACG,UAAD,EAAa;AACzB,QAAIC,YAAY,GAAG,KAAKtB,KAAL,CAAWuB,SAAX,CAAqBR,GAArB,CAA0BS,IAAD,IAAWH,UAAU,CAACI,GAAX,IAAkBD,IAAI,CAACC,GAAxB,GAA+BD,IAA/B,GAAsCH,UAAzE,CAAnB;AACA,SAAKZ,QAAL,CAAc;AAACiB,MAAAA,SAAS,EAAEJ,YAAZ;AAA0BpB,MAAAA,QAAQ,EAACmB;AAAnC,KAAd;AACD;;AAEDM,EAAAA,aAAa,CAACf,OAAD,EAAU;AACrB,WAAOA,OAAO,CAACG,GAAR,CAAY,CAACa,GAAD,EAAMC,KAAN,KAAgB;AACjC,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,GAAL,CADJ;AAGD,KAJM,CAAP;AAKD;;AAEDX,EAAAA,UAAU,CAACL,OAAD,EAAU;AAClB,WAAO,KAAKZ,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAwB,CAACe,MAAD,EAASD,KAAT,KAAmB;AAChD,aACE;AAAI,QAAA,GAAG,EAAEC,MAAM,CAACL,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKM,SAAL,CAAeD,MAAf,EAAuBlB,OAAvB,CADH,CADF;AAKD,KANM,CAAP;AAOD;;AAEDmB,EAAAA,SAAS,CAACD,MAAD,EAASlB,OAAT,EAAmB;AAC1B,WAAOA,OAAO,CAACG,GAAR,CAAY,CAACiB,OAAD,EAAUH,KAAV,KAAoB;AACnC,aAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,MAAM,CAACE,OAAD,CAAX,CAAR;AACH,KAFM,CAAP;AAGD;;AApEoC;;AAyEvC,eAAepC,UAAf","sourcesContent":["import React from 'react';\nimport BorrarFarmacia from \"./componentes/BorrarFarmacia\"\n\nconst API_HOST = process.env.REACT_APP_API_HOST || 'localhost';\nconst API_PORT = process.env.REACT_APP_API_PORT || 8888;\n\nconst API_URL = `//${API_HOST}:${API_PORT}`;\n\nclass EntityList extends React.Component {\n\n    constructor(props) {\n      super(props);\n      this.state= { entities: [], selected: {}}\n    }\n\n    componentWillMount() {\n      fetch(`${API_URL}/${this.props.entity}`)\n        .then( res => res.json())\n        .then( entities => this.setState({entities: entities}));\n    }\n\n    render() {\n      if(this.state.entities.length > 0) {\n        //uso el primero para conocer los atributos\n      var columns = Object.entries(this.state.entities[0]).map(entry => entry[0])\n      return (\n        <div className=\"EntityList\">\n        \n          <table className=\"table\">\n            <thead>\n              <tr>\n              <th>nombre</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.renderRows(columns)}\n            </tbody>\n          </table>\n          <BorrarFarmacia farmacia={this.state.selected} farmaciaChange={this.farmaciaChange} />\n        </div>\n      );\n    }\n    else {\n      return (<p> Cargando {this.props.entity} </p>);\n    }\n    }\n    select(unProducto) {\n      this.setState({selected:unProducto })\n    }\n    farmaciaChange(unFarmacia) {\n      var newFarmacias = this.state.productos.map((item) => (unFarmacia._id != item._id) ? item : unFarmacia )\n      this.setState({farmacias: newFarmacias, selected:unFarmacia})\n    }\n\n    renderHeaders(columns) {\n      return columns.map((col, index) => {\n        return (\n            <th>{col}</th>\n        );\n      })\n    }\n\n    renderRows(columns) {\n      return this.state.entities.map((object, index) => {\n        return (\n          <tr key={object._id}>\n            {this.renderRow(object, columns)}\n          </tr>\n        );\n      })\n    }\n\n    renderRow(object, columns,) {\n      return columns.map((attName, index) => {\n          return (<td>{object[attName]}</td>);\n      });\n    }\n  }\n\n\n\n  export default EntityList\n"]},"metadata":{},"sourceType":"module"}